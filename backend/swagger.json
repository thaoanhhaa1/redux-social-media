{
    "openapi": "3.0.0",
    "info": {
        "title": "Social Media API",
        "description": "API for social media",
        "version": "1.0.0",
        "contact": {
            "name": "Hà Anh Thảo",
            "email": "thaoanhhaa1@gmail.com",
            "url": "https://www.facebook.com/teamlayloia1"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        },
        "termsOfService": "https://www.example.com/terms-of-service"
    },
    "servers": [
        {
            "url": "http://localhost:8080/api",
            "description": "Local server"
        }
    ],
    "paths": {
        "/private/users/get-user": {
            "get": {
                "summary": "Find user by username",
                "tags": ["User"],
                "description": "Find user by username",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64a435d7e4658701a763e1a2",
                                    "username": "string",
                                    "email": "email@gmail.com",
                                    "deleted": false,
                                    "createdAt": "2023-07-04T15:08:07.599Z",
                                    "updatedAt": "2023-07-04T15:08:07.599Z",
                                    "__v": 0,
                                    "avatar": "url_image",
                                    "background": "url_image",
                                    "bio": "string",
                                    "birthday": "2002-06-23T00:00:00.000Z",
                                    "location": "string",
                                    "name": "string",
                                    "website": "string"
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "format": "ObjectId",
                                            "example": "64a435d7e4658701a763e1a2"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "username"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "email@gmail.com"
                                        },
                                        "deleted": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-07-04T15:08:07.599Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-07-04T15:08:07.599Z"
                                        },
                                        "__v": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "avatar": {
                                            "type": "string",
                                            "format": "url"
                                        },
                                        "background": {
                                            "type": "string",
                                            "format": "url"
                                        },
                                        "bio": {
                                            "type": "string",
                                            "example": "Dev"
                                        },
                                        "birthday": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2002-06-23"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Việt Nam"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Anh Thảo"
                                        },
                                        "website": {
                                            "type": "string",
                                            "example": "https://mywebsite.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/users/get-users-online": {
            "get": {
                "summary": "Get all the users you follow that are online",
                "tags": ["User"],
                "description": "Get all the users you follow that are online",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "username": "anhthaodev",
                                        "email": "anhthaodev@gmail.com",
                                        "createdAt": "2023-07-04T15:08:07.599Z",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "background": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_background_1691285415457.jpeg?alt=media&token=0ead2bdd-4b37-4556-9dd4-13fbbe3487e5",
                                        "bio": "Dev",
                                        "birthday": "2002-06-23T00:00:00.000Z",
                                        "location": "Việt Nam",
                                        "name": "Anh Thảo",
                                        "website": "https://mywebsite.com"
                                    },
                                    {
                                        "_id": "64a4361fe4658701a763e1b4",
                                        "username": "User2",
                                        "email": "User2@gmail.com",
                                        "createdAt": "2023-07-04T15:09:19.685Z",
                                        "offline": "2023-07-08T02:01:19.879Z"
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "example": "64a435d7e4658701a763e1a2"
                                            },
                                            "username": {
                                                "type": "string",
                                                "example": "username"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "email@gmail.com"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-07-04T15:08:07.599Z"
                                            },
                                            "avatar": {
                                                "type": "string",
                                                "format": "url"
                                            },
                                            "background": {
                                                "type": "string",
                                                "format": "url"
                                            },
                                            "bio": {
                                                "type": "string",
                                                "example": "Dev"
                                            },
                                            "birthday": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2002-06-23T00:00:00.000Z"
                                            },
                                            "location": {
                                                "type": "string",
                                                "example": "Việt Nam"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Anh Thảo"
                                            },
                                            "website": {
                                                "type": "string",
                                                "example": "https://mywebsite.com"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/users/edit-profile": {
            "post": {
                "summary": "Update user's information",
                "description": "Update user's information",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["User"],
                "requestBody": {
                    "description": "Update user's information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "example": {
                                "name": "Hà Anh Thảo",
                                "avatar": "https://images.unsplash.com/photo-1702404275992-929c62049bfe?q=80&w=2031&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                                "background": "https://images.unsplash.com/photo-1702404275992-929c62049bfe?q=80&w=2031&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                                "bio": "This is bio example",
                                "location": "Việt Nam",
                                "website": "https://www.facebook.com/",
                                "birthday": "2023-12-11T00:00:00.000Z"
                            },
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Hà Anh Thảo"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "https://images.unsplash.com/photo-1702404275992-929c62049bfe?q=80&w=2031&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                                    },
                                    "background": {
                                        "type": "string",
                                        "example": "https://images.unsplash.com/photo-1702404275992-929c62049bfe?q=80&w=2031&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "This is bio example"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Việt Nam"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://www.facebook.com/"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-11"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64a435d7e4658701a763e1a2",
                                    "username": "anhthaodev",
                                    "email": "anhthaodev@gmail.com",
                                    "password": "$2b$10$bYjokOXFbNvCHpBcndMOH.ePzkz.5s.xnDIWN6YspezkCUrotZwPy",
                                    "deleted": false,
                                    "createdAt": "2023-07-04T15:08:07.599+00:00",
                                    "updatedAt": "2023-08-06T01:30:18.168+00:00",
                                    "__v": 0,
                                    "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                    "background": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_background_1691285415457.jpeg?alt=media&token=0ead2bdd-4b37-4556-9dd4-13fbbe3487e5",
                                    "bio": "Dev",
                                    "birthday": "2002-06-23T00:00:00.000+00:00",
                                    "location": "Việt Nam",
                                    "name": "Anh Thảo",
                                    "website": ""
                                },
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Hà Anh Thảo"
                                        },
                                        "avatar": {
                                            "type": "string",
                                            "example": "https://images.unsplash.com/photo-1702404275992-929c62049bfe?q=80&w=2031&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                                        },
                                        "background": {
                                            "type": "string",
                                            "example": "https://images.unsplash.com/photo-1702404275992-929c62049bfe?q=80&w=2031&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                                        },
                                        "bio": {
                                            "type": "string",
                                            "example": "This is bio example"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Việt Nam"
                                        },
                                        "website": {
                                            "type": "string",
                                            "example": "https://www.facebook.com/"
                                        },
                                        "birthday": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2023-12-11"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/follow/count": {
            "get": {
                "tags": ["Follow"],
                "summary": "Count number of following and follower",
                "description": "Count number of following and follower",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [10, 10],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/follow/who-to-follow": {
            "get": {
                "tags": ["Follow"],
                "summary": "User suggestions",
                "description": "User suggestions",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "username": "anhthaodev",
                                        "email": "anhthaodev@gmail.com",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "background": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_background_1691285415457.jpeg?alt=media&token=0ead2bdd-4b37-4556-9dd4-13fbbe3487e5",
                                        "bio": "Dev",
                                        "birthday": "2002-06-23T00:00:00.000Z",
                                        "location": "Việt Nam",
                                        "name": "Anh Thảo",
                                        "website": "",
                                        "priority": 0
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "title": "User",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "avatar": {
                                                "type": "string"
                                            },
                                            "background": {
                                                "type": "string"
                                            },
                                            "bio": {
                                                "type": "string"
                                            },
                                            "birthday": {
                                                "type": "string"
                                            },
                                            "location": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "website": {
                                                "type": "string"
                                            },
                                            "priority": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/follow/count-who-to-follow": {
            "get": {
                "summary": "Count the number of people who can follow",
                "description": "Count the number of people who can follow",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["Follow"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": 10,
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/lists/add": {
            "post": {
                "summary": "Add user to list",
                "description": "Add _id of user to list",
                "tags": ["List"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "userId": "64a435d7e4658701a763e1a2"
                            },
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "description": "_id of user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "result": "64a435d7e4658701a763e1a2"
                                },
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "string",
                                            "description": "_id of user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/lists/remove": {
            "post": {
                "summary": "Remove user from list",
                "description": "Remove _id of user from list",
                "tags": ["List"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "userId": "64a435d7e4658701a763e1a2"
                            },
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "description": "_id of user"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "result": "64a435d7e4658701a763e1a2"
                                },
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "string",
                                            "description": "_id of user"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/locations": {
            "get": {
                "summary": "Get locations by query",
                "description": "Get locations by query in title or description",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["Location"],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "v": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64bb3d6aa5d2e2a346eb7516",
                                        "title": "Ho Chi Minh City",
                                        "description": "Ho Chi Minh City, Vietnam",
                                        "image": "/5AmCdexsMi-.png"
                                    }
                                ],
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/online-status": {
            "post": {
                "summary": "User's online or offline status",
                "description": "User's online or offline status",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["OnlineStatus"],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/search/{search}": {
            "get": {
                "summary": "Search users, search in username, email and name",
                "description": "Search users, search in username, email and name",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "path",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "example": "a"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": 5
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "username": "anhthaodev",
                                        "email": "anhthaodev@gmail.com",
                                        "createdAt": "2023-07-04T15:08:07.599Z",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "background": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_background_1691285415457.jpeg?alt=media&token=0ead2bdd-4b37-4556-9dd4-13fbbe3487e5",
                                        "bio": "Dev",
                                        "birthday": "2002-06-23T00:00:00.000Z",
                                        "location": "Việt Nam",
                                        "name": "Anh Thảo",
                                        "website": ""
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "example": "64a435d7e4658701a763e1a2"
                                            },
                                            "username": {
                                                "type": "string",
                                                "example": "anhthaodev"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "anhthaodev@gmail.com"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-07-04T15:08:07.599Z"
                                            },
                                            "avatar": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7"
                                            },
                                            "background": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_background_1691285415457.jpeg?alt=media&token=0ead2bdd-4b37-4556-9dd4-13fbbe3487e5"
                                            },
                                            "bio": {
                                                "type": "string",
                                                "example": "Dev"
                                            },
                                            "birthday": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2002-06-23"
                                            },
                                            "location": {
                                                "type": "string",
                                                "example": "Việt Nam"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Anh Thảo"
                                            },
                                            "website": {
                                                "type": "string",
                                                "example": ""
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/stories/get-stories": {
            "get": {
                "summary": "Get stories",
                "description": "Get all my and following's stories within 1 day",
                "tags": ["Stories"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64b3f8080e3ed0c01f5ebcac",
                                        "user": "64a435d7e4658701a763e1a2",
                                        "story": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64b3f8080e3ed0c01f5ebcac_story_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "createdAt": "2023-07-16T14:00:40.249+00:00",
                                        "updatedAt": "2023-07-16T14:00:40.249+00:00"
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Story"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/stories": {
            "post": {
                "summary": "Add new story",
                "description": "Add new story to my self",
                "tags": ["Stories"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "url": "https://unsplash.com/photos/a-bride-holding-a-bouquet-of-flowers-in-her-hands-jSiDGsUBH5o"
                            },
                            "schema": {
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "format": "url"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64b3f8080e3ed0c01f5ebcac",
                                    "user": "64a435d7e4658701a763e1a2",
                                    "story": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_1689516020764.png?alt=media&token=2d8aa02d-5853-411e-a686-56525144e6b2",
                                    "createdAt": "2023-07-16T14:00:40.249Z",
                                    "updatedAt": "2023-07-16T14:00:40.249Z"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Story"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/count": {
            "get": {
                "summary": "Get the number of tweets from the user",
                "description": "Get the number of tweets from the user",
                "tags": ["Tweet"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": 5,
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/get-my-tweets": {
            "get": {
                "summary": "Get all tweets from the user",
                "description": "Get all tweets from the user",
                "tags": ["Tweet"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 8
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64cb712f8428263795605d7b",
                                        "user": {
                                            "_id": "64a435d7e4658701a763e1a2",
                                            "name": "Anh Thảo",
                                            "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                            "username": "anhthaodev",
                                            "isInList": false,
                                            "follow": false
                                        },
                                        "content": "This is my tweet",
                                        "images": [
                                            "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F1691054370559.jpeg?alt=media&token=d0b36c20-667f-4fe2-8940-e70860d81394"
                                        ],
                                        "videos": [],
                                        "likes": [],
                                        "feeling": {
                                            "title": "feeling happy",
                                            "image": "base64"
                                        },
                                        "location": {
                                            "_id": "64bb3d6aa5d2e2a346eb7516",
                                            "title": "Ho Chi Minh City",
                                            "description": "Ho Chi Minh City, Vietnam",
                                            "image": "/5AmCdexsMi-.png"
                                        },
                                        "tagPeople": [
                                            {
                                                "name": "Anh Thảo",
                                                "username": "anhthaodev",
                                                "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                                "_id": "64cb712f8428263795605d7b"
                                            }
                                        ],
                                        "createdAt": "2023-08-03T09:19:43.738Z",
                                        "updatedAt": "2023-08-03T09:19:43.738Z",
                                        "numberOfComments": 0,
                                        "viewed": [],
                                        "deleted": false,
                                        "__v": 0
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Tweet"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "location": {
                                                        "type": "object",
                                                        "properties": {
                                                            "_id": {
                                                                "type": "string",
                                                                "description": "ID"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "description": "Title"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "description": "Description"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "description": "URL image"
                                                            }
                                                        }
                                                    },
                                                    "tagPeople": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string",
                                                                    "format": "ObjectId"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "username": {
                                                                    "type": "string"
                                                                },
                                                                "avatar": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "An array of information's users mentioned or tagged in the tweet"
                                                    },
                                                    "user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "isInList": {
                                                                "type": "boolean"
                                                            },
                                                            "follow": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/get-following-tweets": {
            "get": {
                "summary": "Get tweets of all users you are following",
                "description": "Get tweets of all users you are following",
                "tags": ["Tweet"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64cb712f8428263795605d7b",
                                        "user": {
                                            "_id": "64a435d7e4658701a763e1a2",
                                            "name": "Anh Thảo",
                                            "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                            "username": "anhthaodev",
                                            "isInList": false,
                                            "follow": false
                                        },
                                        "content": "This is my tweet",
                                        "images": [
                                            "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F1691054370559.jpeg?alt=media&token=d0b36c20-667f-4fe2-8940-e70860d81394"
                                        ],
                                        "videos": [],
                                        "likes": [],
                                        "feeling": {
                                            "title": "feeling happy",
                                            "image": "base64"
                                        },
                                        "location": {
                                            "_id": "64bb3d6aa5d2e2a346eb7516",
                                            "title": "Ho Chi Minh City",
                                            "description": "Ho Chi Minh City, Vietnam",
                                            "image": "/5AmCdexsMi-.png"
                                        },
                                        "tagPeople": [
                                            {
                                                "name": "Anh Thảo",
                                                "username": "anhthaodev",
                                                "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                                "_id": "64cb712f8428263795605d7b"
                                            }
                                        ],
                                        "createdAt": "2023-08-03T09:19:43.738Z",
                                        "updatedAt": "2023-08-03T09:19:43.738Z",
                                        "numberOfComments": 0,
                                        "viewed": [],
                                        "deleted": false,
                                        "__v": 0
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Tweet"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "location": {
                                                        "type": "object",
                                                        "properties": {
                                                            "_id": {
                                                                "type": "string",
                                                                "description": "ID"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "description": "Title"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "description": "Description"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "description": "URL image"
                                                            }
                                                        }
                                                    },
                                                    "tagPeople": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string",
                                                                    "format": "ObjectId"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "username": {
                                                                    "type": "string"
                                                                },
                                                                "avatar": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "An array of information's users mentioned or tagged in the tweet"
                                                    },
                                                    "user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "isInList": {
                                                                "type": "boolean"
                                                            },
                                                            "follow": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/count-following-tweets": {
            "get": {
                "summary": "Count the number of tweets from people you follow",
                "description": "Count the number of tweets from people you follow",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["Tweet"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer"
                                },
                                "example": 10
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/toggle-like": {
            "post": {
                "summary": "Like or unlike a tweet",
                "description": "Like or unlike a tweet",
                "tags": ["Tweet"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "tweetId": "64b1f08dd7b0205def0f0cec",
                                "isLike": true
                            },
                            "schema": {
                                "properties": {
                                    "tweetId": {
                                        "type": "string"
                                    },
                                    "isLike": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets": {
            "post": {
                "summary": "Create new tweet",
                "description": "Create new tweet for user is logging",
                "tags": ["Tweet"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "user": {
                                    "_id": "64a435d7e4658701a763e1a2",
                                    "name": "Anh Thảo",
                                    "username": "anhthaodev",
                                    "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7"
                                },
                                "content": "What's on your mind?",
                                "images": [
                                    "https://plus.unsplash.com/premium_photo-1669833450296-1c9948e72f87?q=80&w=1770&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
                                ],
                                "videos": [],
                                "feeling": {
                                    "title": "feeling happy",
                                    "image": "base64"
                                },
                                "location": "64bb3d6aa5d2e2a346eb7516",
                                "tagPeople": ["64a4365be4658701a763e1d8"],
                                "gif": {
                                    "title": "Happy Birthday GIF by The Simpsons",
                                    "url": "https://media1.giphy.com/media/3o6MbhgBx0MaN0nOr6/giphy.gif?cid=270d654apgsg75dqdg3e5umdzfa9oo7xu603uzm5l9vyf3bk&ep=v1_gifs_trending&rid=giphy.gif&ct=g"
                                }
                            },
                            "schema": {
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "format": "ObjectId"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "avatar": {
                                                "type": "string",
                                                "format": "url"
                                            }
                                        },
                                        "required": ["_id", "username"]
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "videos": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "group": {
                                        "type": "string",
                                        "description": "_id of the group to which the tweet was posted"
                                    },
                                    "feeling": {
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "image": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "location": {
                                        "type": "string",
                                        "description": "_id of location"
                                    },
                                    "tagPeople": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "description": "_id of user taged"
                                        }
                                    },
                                    "gif": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "url": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "required": ["user"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64cb712f8428263795605d7b",
                                    "user": {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "name": "Anh Thảo",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "username": "anhthaodev"
                                    },
                                    "content": "This is my tweet",
                                    "images": [
                                        "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F1691054370559.jpeg?alt=media&token=d0b36c20-667f-4fe2-8940-e70860d81394"
                                    ],
                                    "videos": [],
                                    "likes": [],
                                    "feeling": {
                                        "title": "feeling happy",
                                        "image": "base64"
                                    },
                                    "location": {
                                        "_id": "64bb3d6aa5d2e2a346eb7516",
                                        "title": "Ho Chi Minh City",
                                        "description": "Ho Chi Minh City, Vietnam",
                                        "image": "/5AmCdexsMi-.png"
                                    },
                                    "tagPeople": [
                                        {
                                            "name": "Anh Thảo",
                                            "username": "anhthaodev",
                                            "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                            "_id": "64cb712f8428263795605d7b"
                                        }
                                    ],
                                    "createdAt": "2023-08-03T09:19:43.738Z",
                                    "updatedAt": "2023-08-03T09:19:43.738Z",
                                    "numberOfComments": 0,
                                    "viewed": [],
                                    "deleted": false,
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Tweet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/{tweet_id}/comments": {
            "get": {
                "summary": "Get comments by tweet id",
                "description": "Get comments by tweet id, comments are sorted in descending order by number of comments, number of likes and creation date, and only parent comments are taken",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweet_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of tweet",
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64ab69a49ba42e9d39d28d8d"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64ab69a49ba42e9d39d28d8d",
                                        "post": "64a435d7e4658701a763e1a2",
                                        "user": {
                                            "_id": "64a435d7e4658701a763e1a2",
                                            "name": "Anh Thảo",
                                            "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                            "username": "anhthaodev"
                                        },
                                        "content": "This is my comment",
                                        "likes": ["64ab69a49ba42e9d39d28d8d"],
                                        "parent": null,
                                        "numberOfLikes": 0,
                                        "numberOfComments": 0,
                                        "deleted": false,
                                        "createdAt": "2023-12-19T07:47:47.975Z",
                                        "updatedAt": "2023-12-19T07:47:47.975Z",
                                        "__v": 0
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create comment for tweet",
                "description": "Create comment for tweet",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweet_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of tweet",
                        "schema": {
                            "type": "string"
                        },
                        "example": "64ab69a49ba42e9d39d28d8d"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "user": {
                                    "_id": "64a435d7e4658701a763e1a2",
                                    "name": "Anh Thảo",
                                    "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                    "username": "anhthaodev"
                                },
                                "content": "This is my comment",
                                "parent": null
                            },
                            "schema": {
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "id of user"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "avatar": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "_id",
                                            "avatar",
                                            "username"
                                        ],
                                        "description": "User's information"
                                    },
                                    "content": {
                                        "type": "string",
                                        "description": "The content of the comment"
                                    },
                                    "parent": {
                                        "type": "string",
                                        "description": "The ID of the parent comment, if any"
                                    }
                                },
                                "required": ["user", "content"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64ab69a49ba42e9d39d28d8d",
                                    "post": "64a435d7e4658701a763e1a2",
                                    "user": {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "name": "Anh Thảo",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "username": "anhthaodev"
                                    },
                                    "content": "This is my comment",
                                    "likes": ["64ab69a49ba42e9d39d28d8d"],
                                    "parent": null,
                                    "numberOfLikes": 0,
                                    "numberOfComments": 0,
                                    "deleted": false,
                                    "createdAt": "2023-12-19T07:47:47.975Z",
                                    "updatedAt": "2023-12-19T07:47:47.975Z",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/tweets/{tweet_id}/comments/{comment_id}": {
            "put": {
                "summary": "Update comment",
                "description": "Update comment",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64a435d7e4658701a763e1a2",
                        "description": "ID of tweet"
                    },
                    {
                        "name": "comment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64a4361fe4658701a763e1b4",
                        "description": "ID of comment"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "user": {
                                    "_id": "64a435d7e4658701a763e1a2",
                                    "name": "Anh Thảo",
                                    "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                    "username": "anhthaodev"
                                },
                                "content": "This is my comment",
                                "parent": null
                            },
                            "schema": {
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "id of user"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "avatar": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "_id",
                                            "avatar",
                                            "username"
                                        ],
                                        "description": "User's information"
                                    },
                                    "content": {
                                        "type": "string",
                                        "description": "The content of the comment"
                                    },
                                    "parent": {
                                        "type": "string",
                                        "description": "The ID of the parent comment, if any"
                                    }
                                },
                                "required": [
                                    "_id",
                                    "post",
                                    "user",
                                    "content",
                                    "likes"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64ab69a49ba42e9d39d28d8d",
                                    "post": "64a435d7e4658701a763e1a2",
                                    "user": {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "name": "Anh Thảo",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "username": "anhthaodev"
                                    },
                                    "content": "This is my comment",
                                    "likes": ["64ab69a49ba42e9d39d28d8d"],
                                    "parent": null,
                                    "numberOfLikes": 0,
                                    "numberOfComments": 0,
                                    "deleted": false,
                                    "createdAt": "2023-12-19T07:47:47.975Z",
                                    "updatedAt": "2023-12-19T07:47:47.975Z",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 404,
                                    "message": "Comment was't found"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update comment",
                "description": "Update comment",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64a435d7e4658701a763e1a2",
                        "description": "ID of tweet"
                    },
                    {
                        "name": "comment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64a4361fe4658701a763e1b4",
                        "description": "ID of comment"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "content": "This is update comment"
                            },
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "description": "Content of comment"
                                    }
                                },
                                "required": ["content"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64ab69a49ba42e9d39d28d8d",
                                    "post": "64a435d7e4658701a763e1a2",
                                    "user": {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "name": "Anh Thảo",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "username": "anhthaodev"
                                    },
                                    "content": "This is my comment",
                                    "likes": ["64ab69a49ba42e9d39d28d8d"],
                                    "parent": null,
                                    "numberOfLikes": 0,
                                    "numberOfComments": 0,
                                    "deleted": false,
                                    "createdAt": "2023-12-19T07:47:47.975Z",
                                    "updatedAt": "2023-12-19T07:47:47.975Z",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 404,
                                    "message": "Comment was't found"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Soft delete comment",
                "description": "Soft delete comment",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tweet_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64a435d7e4658701a763e1a2",
                        "description": "ID of tweet"
                    },
                    {
                        "name": "comment_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "example": "64a4361fe4658701a763e1b4",
                        "description": "ID of comment"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": {
                                    "_id": "64ab69a49ba42e9d39d28d8d",
                                    "post": "64a435d7e4658701a763e1a2",
                                    "user": {
                                        "_id": "64a435d7e4658701a763e1a2",
                                        "name": "Anh Thảo",
                                        "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                        "username": "anhthaodev"
                                    },
                                    "content": "This is my comment",
                                    "likes": ["64ab69a49ba42e9d39d28d8d"],
                                    "parent": null,
                                    "numberOfLikes": 0,
                                    "numberOfComments": 0,
                                    "deleted": false,
                                    "createdAt": "2023-12-19T07:47:47.975Z",
                                    "updatedAt": "2023-12-19T07:47:47.975Z",
                                    "__v": 0
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 404,
                                    "message": "Comment was't found"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/comments/{comment_id}/comments": {
            "get": {
                "summary": "Get comments of parent comment by id",
                "description": "Get comments of parent comment by id",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of parent comment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "6581b5f9686a756615ae4871"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "_id": "64ab69a49ba42e9d39d28d8d",
                                        "post": "64a435d7e4658701a763e1a2",
                                        "user": {
                                            "_id": "64a435d7e4658701a763e1a2",
                                            "name": "Anh Thảo",
                                            "avatar": "https://firebasestorage.googleapis.com/v0/b/social-network-1d288.appspot.com/o/images%2F64a435d7e4658701a763e1a2_avatar_1691285402983.jpeg?alt=media&token=20c3a0ff-4705-49ad-829e-b11200944df7",
                                            "username": "anhthaodev"
                                        },
                                        "content": "This is my comment",
                                        "likes": ["64ab69a49ba42e9d39d28d8d"],
                                        "parent": "6581b5f9686a756615ae4871",
                                        "numberOfLikes": 0,
                                        "numberOfComments": 0,
                                        "deleted": false,
                                        "createdAt": "2023-12-19T07:47:47.975Z",
                                        "updatedAt": "2023-12-19T07:47:47.975Z",
                                        "__v": 0
                                    }
                                ],
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/comments/{comment_id}/toggle-like": {
            "post": {
                "summary": "Toggle like for comment by id",
                "description": "Toggle like for comment by id",
                "tags": ["Comment"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "example": "658254a69fd789ff548726d0",
                        "schema": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "isLike": true
                            },
                            "schema": {
                                "properties": {
                                    "isLike": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 404,
                                    "message": "Comment was't found"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/notifications": {
            "get": {
                "summary": "Get notifications",
                "description": "Get notifications",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["Notification"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Default 1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "_id": {
                                                "type": "integer",
                                                "description": "Auto-incrementing ID",
                                                "example": 1
                                            },
                                            "user": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string",
                                                        "format": "ObjectId",
                                                        "description": "Id of notification",
                                                        "example": "6584e947df2eac8ac03efa85"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name",
                                                        "example": "Anh Thảo"
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "description": "Name",
                                                        "example": "anhthaodev"
                                                    },
                                                    "avatar": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "description": "URL of avatar",
                                                        "example": "https://example.com/avatar"
                                                    }
                                                },
                                                "required": ["_id", "username"]
                                            },
                                            "document": {
                                                "type": "string",
                                                "format": "ObjectId",
                                                "description": "Id of notification",
                                                "example": "65844d6e15b1df93d99cf022"
                                            },
                                            "group": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string",
                                                        "format": "ObjectId",
                                                        "description": "Id of notification",
                                                        "example": "6584e947df2eac8ac03efa85"
                                                    }
                                                }
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "ADD_STORY",
                                                    "BIRTHDAY",
                                                    "POST_TWEET",
                                                    "LIKE_TWEET",
                                                    "POST_COMMENT",
                                                    "LIKE_COMMENT"
                                                ]
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-07-04T15:08:07.599Z"
                                            },
                                            "deleted": {
                                                "type": "boolean",
                                                "description": "If true, the notification has been deleted",
                                                "default": false
                                            }
                                        },
                                        "required": [
                                            "user",
                                            "type",
                                            "createdAt"
                                        ]
                                    }
                                },
                                "example": [
                                    {
                                        "_id": 1,
                                        "user": {
                                            "_id": "6584e947df2eac8ac03efa85",
                                            "name": "Anh Thảo",
                                            "username": "anhthaodev",
                                            "avatar": "https://example.com/avatar"
                                        },
                                        "document": "65844d6e15b1df93d99cf022",
                                        "group": {
                                            "_id": "6584e947df2eac8ac03efa85"
                                        },
                                        "type": "ADD_STORY",
                                        "description": "string",
                                        "createdAt": "2023-07-04T15:08:07.599+00:00",
                                        "deleted": false
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post new notification",
                "description": "Post new notification",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["Notification"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "user": {
                                    "_id": "6584e947df2eac8ac03efa85",
                                    "name": "Anh Thảo",
                                    "username": "anhthaodev",
                                    "avatar": "https://example.com/avatar"
                                },
                                "group": {
                                    "_id": "6584e947df2eac8ac03efa85"
                                },
                                "type": "ADD_STORY",
                                "description": "string"
                            },
                            "schema": {
                                "properties": {
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "format": "ObjectId",
                                                "description": "Id of notification",
                                                "example": "6584e947df2eac8ac03efa85"
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "Name",
                                                "example": "Anh Thảo"
                                            },
                                            "username": {
                                                "type": "string",
                                                "description": "Name",
                                                "example": "anhthaodev"
                                            },
                                            "avatar": {
                                                "type": "string",
                                                "format": "url",
                                                "description": "URL of avatar",
                                                "example": "https://example.com/avatar"
                                            }
                                        },
                                        "required": ["_id", "username"]
                                    },
                                    "group": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "format": "ObjectId",
                                                "description": "Id of notification",
                                                "example": "6584e947df2eac8ac03efa85"
                                            }
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "ADD_STORY",
                                            "BIRTHDAY",
                                            "POST_TWEET",
                                            "LIKE_TWEET",
                                            "POST_COMMENT",
                                            "LIKE_COMMENT"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                },
                                "example": {
                                    "_id": "6584e947df2eac8ac03efa85",
                                    "user": "6584e947df2eac8ac03efa85",
                                    "count": 1,
                                    "notifications": [
                                        {
                                            "_id": 1,
                                            "user": {
                                                "_id": "6584e947df2eac8ac03efa85",
                                                "name": "Anh Thảo",
                                                "username": "anhthaodev",
                                                "avatar": "https://example.com/avatar"
                                            },
                                            "group": {
                                                "_id": "6584e947df2eac8ac03efa85"
                                            },
                                            "type": "ADD_STORY",
                                            "description": "string",
                                            "createdAt": "2023-07-04T15:08:07.599Z",
                                            "deleted": false
                                        }
                                    ],
                                    "createdAt": "2023-07-04T15:08:07.599+00:00"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/private/notifications/{notification_id}": {
            "delete": {
                "summary": "Delete notification of user",
                "description": "Delete notification of user",
                "tags": ["Notification"],
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "notification_id",
                        "in": "path",
                        "description": "Id of the notification to be deleted",
                        "example": 1,
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Bad request"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 401,
                                    "message": "Unauthorized"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 404,
                                    "message": "Comment was't found"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "tags": ["Auth"],
                "summary": "Register a new account",
                "description": "Register a new account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "email": "email@gnail.com",
                                "username": "username",
                                "password": "emailAa."
                            },
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "email@gmail.com",
                                        "format": "email"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "emailAa."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IlVzZXIyMTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJVc2VyMjExIiwiX2lkIjoiNjU3YmE1Y2EzMjQ4NWEyNGUwZWQwMzI0IiwiaWF0IjoxNzAyNjA0NjAwLCJleHAiOjE3MDI2OTEwMDB9.vWF8OGJ7vdTE05hitNsOiPNWtj7xKyHvV18xSivzNAo",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 409,
                                    "message": "Username or email already used"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 500,
                                    "message": "Server is down"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "summary": "Sign in",
                "tags": ["Auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "email": "email@gnail.com",
                                "password": "email12Aa."
                            },
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "email@gmail.com",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "emailAa."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IlVzZXIyMTFAZ21haWwuY29tIiwidXNlcm5hbWUiOiJVc2VyMjExIiwiX2lkIjoiNjU3YmE1Y2EzMjQ4NWEyNGUwZWQwMzI0IiwiaWF0IjoxNzAyNjA0NjAwLCJleHAiOjE3MDI2OTEwMDB9.vWF8OGJ7vdTE05hitNsOiPNWtj7xKyHvV18xSivzNAo",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 400,
                                    "message": "Email or password is incorrect"
                                },
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "JWTAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "authorization",
                "description": "Bearer JWT token for authentication"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123@"
                    },
                    "avatar": {
                        "type": "string",
                        "example": "url_to_avatar"
                    },
                    "background": {
                        "type": "string",
                        "example": "url_to_background"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "bio": {
                        "type": "string",
                        "example": "A passionate social media user"
                    },
                    "location": {
                        "type": "string",
                        "example": "Country"
                    },
                    "website": {
                        "type": "string",
                        "example": "https://www.example.com"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01T00:00:00.000Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00.000Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T13:30:00.000Z"
                    }
                },
                "required": ["username", "email", "password"]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "ID of comment"
                    },
                    "post": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "ID of tweet"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "id of user"
                            },
                            "name": {
                                "type": "string"
                            },
                            "avatar": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            }
                        },
                        "required": ["_id", "avatar", "username"],
                        "description": "User's information"
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the comment"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of user IDs who liked the comment"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The ID of the parent comment, if any"
                    },
                    "numberOfLikes": {
                        "type": "integer",
                        "description": "Number of reactions of the comment",
                        "default": 0
                    },
                    "numberOfComments": {
                        "type": "integer",
                        "description": "Number of replies to comments",
                        "default": 0
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "If correct, the comment has been deleted",
                        "default": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time to post comment"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time to update comments"
                    }
                },
                "required": ["_id", "post", "user", "content", "likes"]
            },
            "List": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId"
                    },
                    "list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["_id", "list"]
            },
            "Location": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "objectId"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string",
                        "format": "url"
                    }
                },
                "required": ["_id", "title", "image"]
            },
            "OnlineStatus": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId"
                    },
                    "offline": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-07-08T02:01:19.879Z"
                    }
                },
                "required": ["_id"]
            },
            "Story": {
                "type": "object",
                "required": ["_id", "user", "story"],
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId"
                    },
                    "user": {
                        "format": "ObjectId",
                        "type": "string",
                        "description": "id of user"
                    },
                    "story": {
                        "type": "string",
                        "description": "URL of image or video",
                        "format": "url"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "Tweet": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "example": "64d9fcbcff8aa99c0854a62a",
                        "description": "Id of tweet"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "format": "ObjectId",
                                "example": "64a435d7e4658701a763e1a2",
                                "description": "Id"
                            },
                            "name": {
                                "type": "string",
                                "example": "Anh Thảo",
                                "description": "Name"
                            },
                            "avatar": {
                                "type": "string",
                                "format": "url",
                                "example": "https://example.com/image.jpg",
                                "description": "Avatar"
                            },
                            "username": {
                                "type": "string",
                                "example": "username",
                                "description": "Username"
                            }
                        },
                        "required": ["_id", "username"],
                        "description": "User's information"
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the tweet",
                        "example": "Hello, world!"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of image URLs attached to the tweet",
                        "example": [
                            "https://example.com/image1.jpg",
                            "https://example.com/image2.jpg"
                        ]
                    },
                    "videos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of video URLs attached to the tweet",
                        "example": [
                            "https://example.com/video1.mp4",
                            "https://example.com/video2.mp4"
                        ]
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of _id's users who liked the tweet",
                        "example": ["64d9fcbcff8aa99c0854a62a"]
                    },
                    "group": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "The _id of  group of the tweet",
                        "example": "64d9fcbcff8aa99c0854a62a"
                    },
                    "feeling": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "The title of the user's feeling",
                                "example": "Happy"
                            },
                            "image": {
                                "type": "string",
                                "description": "The URL of an image representing the user's feeling",
                                "example": "https://example.com/happy.jpg"
                            }
                        },
                        "description": "The user's feeling associated with the tweet"
                    },
                    "location": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "The _id of location where the tweet was created",
                        "example": "64bb3d6aa5d2e2a346eb7516"
                    },
                    "tagPeople": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "ObjectId"
                        },
                        "description": "An array of _id's users mentioned or tagged in the tweet",
                        "example": ["64a43612e4658701a763e1ab"]
                    },
                    "gif": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "The title or description of the GIF",
                                "example": "Funny GIF"
                            },
                            "url": {
                                "type": "string",
                                "format": "url",
                                "description": "The URL of the GIF",
                                "example": "https://example.com/funny.gif"
                            }
                        },
                        "description": "A GIF attached to the tweet"
                    },
                    "numberOfComments": {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of comments of the tweet"
                    },
                    "viewed": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ids of users who have viewed this tweet",
                        "example": ["64a435d7e4658701a763e1a2"]
                    },
                    "deleted": {
                        "type": "boolean",
                        "default": false,
                        "description": "If tweet was deleted, deleted is true"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of tweet creation",
                        "example": "2023-12-21T14:36:30.844Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Tweet update time",
                        "example": "2023-12-21T14:36:30.844Z"
                    }
                },
                "required": ["_id", "user", "likes", "tagPeople"],
                "additionalProperties": false
            },
            "Follow": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId"
                    },
                    "user": {
                        "type": "string",
                        "description": "The user's identifier"
                    },
                    "followers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of user IDs who are followers"
                    },
                    "following": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of user IDs who are being followed"
                    }
                },
                "required": ["_id", "user", "followers", "following"]
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "Id of notification",
                        "example": "6584e947df2eac8ac03efa85"
                    },
                    "user": {
                        "type": "string",
                        "format": "ObjectId",
                        "description": "Id of the user, the notification recipient",
                        "example": "6584e947df2eac8ac03efa85"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Number of notifications per bucket",
                        "default": 0,
                        "maximum": 10
                    },
                    "notifications": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "integer",
                                    "description": "Auto-incrementing ID",
                                    "example": 1
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "format": "ObjectId",
                                            "description": "Id of notification",
                                            "example": "6584e947df2eac8ac03efa85"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name",
                                            "example": "Anh Thảo"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "Name",
                                            "example": "anhthaodev"
                                        },
                                        "avatar": {
                                            "type": "string",
                                            "format": "url",
                                            "description": "URL of avatar",
                                            "example": "https://example.com/avatar"
                                        }
                                    },
                                    "required": ["_id", "username"]
                                },
                                "document": {
                                    "type": "string",
                                    "format": "ObjectId",
                                    "description": "Id of tweet, comment, user or story",
                                    "example": "65844d6e15b1df93d99cf022"
                                },
                                "group": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string",
                                            "format": "ObjectId",
                                            "description": "Id of notification",
                                            "example": "6584e947df2eac8ac03efa85"
                                        }
                                    }
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "ADD_STORY",
                                        "BIRTHDAY",
                                        "POST_TWEET",
                                        "LIKE_TWEET",
                                        "POST_COMMENT",
                                        "LIKE_COMMENT"
                                    ]
                                },
                                "description": {
                                    "type": "string"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2023-07-04T15:08:07.599Z"
                                },
                                "deleted": {
                                    "type": "boolean",
                                    "description": "If true, the notification has been deleted",
                                    "default": false
                                }
                            },
                            "required": [
                                "user",
                                "type",
                                "createdAt",
                                "document"
                            ]
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-07-04T15:08:07.599Z",
                        "readOnly": true
                    }
                },
                "required": ["user"]
            }
        }
    },
    "tags": [
        {
            "name": "User",
            "description": "Basic information of the user"
        },
        {
            "name": "Comment",
            "description": "Comment of tweet"
        },
        {
            "name": "Follow",
            "description": "Following and follower of user"
        },
        {
            "name": "List",
            "description": "..."
        },
        {
            "name": "Location",
            "description": "Location on world"
        },
        {
            "name": "OnlineStatus",
            "description": "User's online or offline status"
        },
        {
            "name": "Stories",
            "description": "User's stories"
        },
        {
            "name": "Tweet",
            "description": "Tweet"
        },
        {
            "name": "Auth",
            "description": "Authentication user"
        },
        {
            "name": "Notification",
            "description": "Notification"
        }
    ]
}
